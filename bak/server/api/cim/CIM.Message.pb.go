// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: CIM.Message.proto

package cim

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发送消息
type CIMMsgData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id:		0x0301
	FromUserId   uint64         `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`                              // 消息发送方
	FromNickName string         `protobuf:"bytes,2,opt,name=from_nick_name,json=fromNickName,proto3" json:"from_nick_name,omitempty"`                         // 消息发送方昵称
	ToSessionId  uint64         `protobuf:"varint,3,opt,name=to_session_id,json=toSessionId,proto3" json:"to_session_id,omitempty"`                           // 消息接受方，单聊用户ID，群聊群ID
	ClientMsgId  string         `protobuf:"bytes,4,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`                            // 客户端消息ID，唯一（UUID）
	ServerMsgId  uint64         `protobuf:"varint,5,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`                           // 服务端生成的消息ID，顺序（客户端发送时无需设置）
	CreateTime   int32          `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                // 消息创建时间戳(秒)
	MsgType      CIMMsgType     `protobuf:"varint,7,opt,name=msg_type,json=msgType,proto3,enum=CIM.Def.CIMMsgType" json:"msg_type,omitempty"`                 // 消息类型
	SessionType  CIMSessionType `protobuf:"varint,8,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"` // 会话类型
	MsgData      []byte         `protobuf:"bytes,9,opt,name=msg_data,json=msgData,proto3" json:"msg_data,omitempty"`                                          // 消息内容
}

func (x *CIMMsgData) Reset() {
	*x = CIMMsgData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMMsgData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMMsgData) ProtoMessage() {}

func (x *CIMMsgData) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMMsgData.ProtoReflect.Descriptor instead.
func (*CIMMsgData) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{0}
}

func (x *CIMMsgData) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *CIMMsgData) GetFromNickName() string {
	if x != nil {
		return x.FromNickName
	}
	return ""
}

func (x *CIMMsgData) GetToSessionId() uint64 {
	if x != nil {
		return x.ToSessionId
	}
	return 0
}

func (x *CIMMsgData) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *CIMMsgData) GetServerMsgId() uint64 {
	if x != nil {
		return x.ServerMsgId
	}
	return 0
}

func (x *CIMMsgData) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CIMMsgData) GetMsgType() CIMMsgType {
	if x != nil {
		return x.MsgType
	}
	return CIMMsgType_kCIM_MSG_TYPE_UNKNOWN
}

func (x *CIMMsgData) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (x *CIMMsgData) GetMsgData() []byte {
	if x != nil {
		return x.MsgData
	}
	return nil
}

// 消息收到回复
type CIMMsgDataAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id:		0x0302
	FromUserId  uint64         `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`                              // 消息发送方
	ToSessionId uint64         `protobuf:"varint,2,opt,name=to_session_id,json=toSessionId,proto3" json:"to_session_id,omitempty"`                           // 消息接受方，单聊用户ID，群聊群ID
	ClientMsgId string         `protobuf:"bytes,3,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`                            // 客户端消息ID，唯一（UUID）
	ServerMsgId uint64         `protobuf:"varint,4,opt,name=server_msg_id,json=serverMsgId,proto3" json:"server_msg_id,omitempty"`                           // 服务端生成的消息ID，顺序
	ResCode     CIMResCode     `protobuf:"varint,5,opt,name=res_code,json=resCode,proto3,enum=CIM.Def.CIMResCode" json:"res_code,omitempty"`                 // 错误码
	SessionType CIMSessionType `protobuf:"varint,6,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"` // 会话类型
	//optional
	CreateTime int32 `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间戳(毫秒)
}

func (x *CIMMsgDataAck) Reset() {
	*x = CIMMsgDataAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMMsgDataAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMMsgDataAck) ProtoMessage() {}

func (x *CIMMsgDataAck) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMMsgDataAck.ProtoReflect.Descriptor instead.
func (*CIMMsgDataAck) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{1}
}

func (x *CIMMsgDataAck) GetFromUserId() uint64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *CIMMsgDataAck) GetToSessionId() uint64 {
	if x != nil {
		return x.ToSessionId
	}
	return 0
}

func (x *CIMMsgDataAck) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *CIMMsgDataAck) GetServerMsgId() uint64 {
	if x != nil {
		return x.ServerMsgId
	}
	return 0
}

func (x *CIMMsgDataAck) GetResCode() CIMResCode {
	if x != nil {
		return x.ResCode
	}
	return CIMResCode_kCIM_RES_CODE_UNKNOWN
}

func (x *CIMMsgDataAck) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (x *CIMMsgDataAck) GetCreateTime() int32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 消息已读回复（我方）
type CIMMsgDataReadAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id:		0x0303
	UserId      uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 消息发送方
	SessionId   uint64         `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MsgId       uint64         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // 服务器消息ID，在该ID之前的所有消息被标记为已读
	SessionType CIMSessionType `protobuf:"varint,4,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
}

func (x *CIMMsgDataReadAck) Reset() {
	*x = CIMMsgDataReadAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMMsgDataReadAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMMsgDataReadAck) ProtoMessage() {}

func (x *CIMMsgDataReadAck) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMMsgDataReadAck.ProtoReflect.Descriptor instead.
func (*CIMMsgDataReadAck) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{2}
}

func (x *CIMMsgDataReadAck) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CIMMsgDataReadAck) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CIMMsgDataReadAck) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *CIMMsgDataReadAck) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

// 已读消息通知（对方）
type CIMMsgDataReadNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id:		0x0304
	UserId      uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 消息发送方
	SessionId   uint64         `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MsgId       uint64         `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"` // 服务器消息ID，在该ID之前的所有消息需要被标记为已读
	SessionType CIMSessionType `protobuf:"varint,4,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
}

func (x *CIMMsgDataReadNotify) Reset() {
	*x = CIMMsgDataReadNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMMsgDataReadNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMMsgDataReadNotify) ProtoMessage() {}

func (x *CIMMsgDataReadNotify) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMMsgDataReadNotify.ProtoReflect.Descriptor instead.
func (*CIMMsgDataReadNotify) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{3}
}

func (x *CIMMsgDataReadNotify) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CIMMsgDataReadNotify) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CIMMsgDataReadNotify) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *CIMMsgDataReadNotify) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

// 某个会话最新的消息ID请求
type CIMGetLatestMsgIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id: 		0x030b
	UserId      uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionType CIMSessionType `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
	SessionId   uint64         `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *CIMGetLatestMsgIdReq) Reset() {
	*x = CIMGetLatestMsgIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMGetLatestMsgIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMGetLatestMsgIdReq) ProtoMessage() {}

func (x *CIMGetLatestMsgIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMGetLatestMsgIdReq.ProtoReflect.Descriptor instead.
func (*CIMGetLatestMsgIdReq) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{4}
}

func (x *CIMGetLatestMsgIdReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CIMGetLatestMsgIdReq) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (x *CIMGetLatestMsgIdReq) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

type CIMGetLatestMsgIdRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id:		0x030c
	UserId      uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionType CIMSessionType `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
	SessionId   uint64         `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	LatestMsgId string         `protobuf:"bytes,4,opt,name=latest_msg_id,json=latestMsgId,proto3" json:"latest_msg_id,omitempty"` // 会话最新的消息ID（UUID）
}

func (x *CIMGetLatestMsgIdRsp) Reset() {
	*x = CIMGetLatestMsgIdRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMGetLatestMsgIdRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMGetLatestMsgIdRsp) ProtoMessage() {}

func (x *CIMGetLatestMsgIdRsp) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMGetLatestMsgIdRsp.ProtoReflect.Descriptor instead.
func (*CIMGetLatestMsgIdRsp) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{5}
}

func (x *CIMGetLatestMsgIdRsp) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CIMGetLatestMsgIdRsp) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (x *CIMGetLatestMsgIdRsp) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CIMGetLatestMsgIdRsp) GetLatestMsgId() string {
	if x != nil {
		return x.LatestMsgId
	}
	return ""
}

// 批量查询消息详情请求(20条内)
type CIMGetMsgByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id: 		0x030d
	UserId      uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionType CIMSessionType `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
	SessionId   uint64         `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MsgIdList   []string       `protobuf:"bytes,4,rep,name=msg_id_list,json=msgIdList,proto3" json:"msg_id_list,omitempty"` // 要查询消息详情的ID列表
}

func (x *CIMGetMsgByIdReq) Reset() {
	*x = CIMGetMsgByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMGetMsgByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMGetMsgByIdReq) ProtoMessage() {}

func (x *CIMGetMsgByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMGetMsgByIdReq.ProtoReflect.Descriptor instead.
func (*CIMGetMsgByIdReq) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{6}
}

func (x *CIMGetMsgByIdReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CIMGetMsgByIdReq) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (x *CIMGetMsgByIdReq) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CIMGetMsgByIdReq) GetMsgIdList() []string {
	if x != nil {
		return x.MsgIdList
	}
	return nil
}

type CIMGetMsgByIdRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cmd id:		0x030e
	UserId      uint64         `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionType CIMSessionType `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3,enum=CIM.Def.CIMSessionType" json:"session_type,omitempty"`
	SessionId   uint64         `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MsgList     []*CIMMsgInfo  `protobuf:"bytes,4,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"` // 消息详情列表
}

func (x *CIMGetMsgByIdRsp) Reset() {
	*x = CIMGetMsgByIdRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CIM_Message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CIMGetMsgByIdRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIMGetMsgByIdRsp) ProtoMessage() {}

func (x *CIMGetMsgByIdRsp) ProtoReflect() protoreflect.Message {
	mi := &file_CIM_Message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CIMGetMsgByIdRsp.ProtoReflect.Descriptor instead.
func (*CIMGetMsgByIdRsp) Descriptor() ([]byte, []int) {
	return file_CIM_Message_proto_rawDescGZIP(), []int{7}
}

func (x *CIMGetMsgByIdRsp) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CIMGetMsgByIdRsp) GetSessionType() CIMSessionType {
	if x != nil {
		return x.SessionType
	}
	return CIMSessionType_kCIM_SESSION_TYPE_Invalid
}

func (x *CIMGetMsgByIdRsp) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *CIMGetMsgByIdRsp) GetMsgList() []*CIMMsgInfo {
	if x != nil {
		return x.MsgList
	}
	return nil
}

var File_CIM_Message_proto protoreflect.FileDescriptor

var file_CIM_Message_proto_rawDesc = []byte{
	0x0a, 0x11, 0x43, 0x49, 0x4d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x43, 0x49, 0x4d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0d, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe8, 0x02, 0x0a, 0x0a, 0x43, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74,
	0x6f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e,
	0x43, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e,
	0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x02, 0x0a, 0x0d, 0x43,
	0x49, 0x4d, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43,
	0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x43, 0x49, 0x4d, 0x4d,
	0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x14, 0x43, 0x49, 0x4d,
	0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66,
	0x2e, 0x43, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01, 0x0a,
	0x14, 0x43, 0x49, 0x4d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43,
	0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x43, 0x49,
	0x4d, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x43,
	0x49, 0x4d, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x43, 0x49, 0x4d, 0x47, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65,
	0x66, 0x2e, 0x43, 0x49, 0x4d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x43, 0x49, 0x4d, 0x2e, 0x44, 0x65, 0x66, 0x2e, 0x43, 0x49, 0x4d, 0x4d, 0x73, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x22, 0x0a, 0x17,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x48, 0x03, 0x5a, 0x05, 0x2e, 0x3b, 0x63, 0x69, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CIM_Message_proto_rawDescOnce sync.Once
	file_CIM_Message_proto_rawDescData = file_CIM_Message_proto_rawDesc
)

func file_CIM_Message_proto_rawDescGZIP() []byte {
	file_CIM_Message_proto_rawDescOnce.Do(func() {
		file_CIM_Message_proto_rawDescData = protoimpl.X.CompressGZIP(file_CIM_Message_proto_rawDescData)
	})
	return file_CIM_Message_proto_rawDescData
}

var file_CIM_Message_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_CIM_Message_proto_goTypes = []interface{}{
	(*CIMMsgData)(nil),           // 0: CIM.Message.CIMMsgData
	(*CIMMsgDataAck)(nil),        // 1: CIM.Message.CIMMsgDataAck
	(*CIMMsgDataReadAck)(nil),    // 2: CIM.Message.CIMMsgDataReadAck
	(*CIMMsgDataReadNotify)(nil), // 3: CIM.Message.CIMMsgDataReadNotify
	(*CIMGetLatestMsgIdReq)(nil), // 4: CIM.Message.CIMGetLatestMsgIdReq
	(*CIMGetLatestMsgIdRsp)(nil), // 5: CIM.Message.CIMGetLatestMsgIdRsp
	(*CIMGetMsgByIdReq)(nil),     // 6: CIM.Message.CIMGetMsgByIdReq
	(*CIMGetMsgByIdRsp)(nil),     // 7: CIM.Message.CIMGetMsgByIdRsp
	(CIMMsgType)(0),              // 8: CIM.Def.CIMMsgType
	(CIMSessionType)(0),          // 9: CIM.Def.CIMSessionType
	(CIMResCode)(0),              // 10: CIM.Def.CIMResCode
	(*CIMMsgInfo)(nil),           // 11: CIM.Def.CIMMsgInfo
}
var file_CIM_Message_proto_depIdxs = []int32{
	8,  // 0: CIM.Message.CIMMsgData.msg_type:type_name -> CIM.Def.CIMMsgType
	9,  // 1: CIM.Message.CIMMsgData.session_type:type_name -> CIM.Def.CIMSessionType
	10, // 2: CIM.Message.CIMMsgDataAck.res_code:type_name -> CIM.Def.CIMResCode
	9,  // 3: CIM.Message.CIMMsgDataAck.session_type:type_name -> CIM.Def.CIMSessionType
	9,  // 4: CIM.Message.CIMMsgDataReadAck.session_type:type_name -> CIM.Def.CIMSessionType
	9,  // 5: CIM.Message.CIMMsgDataReadNotify.session_type:type_name -> CIM.Def.CIMSessionType
	9,  // 6: CIM.Message.CIMGetLatestMsgIdReq.session_type:type_name -> CIM.Def.CIMSessionType
	9,  // 7: CIM.Message.CIMGetLatestMsgIdRsp.session_type:type_name -> CIM.Def.CIMSessionType
	9,  // 8: CIM.Message.CIMGetMsgByIdReq.session_type:type_name -> CIM.Def.CIMSessionType
	9,  // 9: CIM.Message.CIMGetMsgByIdRsp.session_type:type_name -> CIM.Def.CIMSessionType
	11, // 10: CIM.Message.CIMGetMsgByIdRsp.msg_list:type_name -> CIM.Def.CIMMsgInfo
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_CIM_Message_proto_init() }
func file_CIM_Message_proto_init() {
	if File_CIM_Message_proto != nil {
		return
	}
	file_CIM_Def_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_CIM_Message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMMsgData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMMsgDataAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMMsgDataReadAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMMsgDataReadNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMGetLatestMsgIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMGetLatestMsgIdRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMGetMsgByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CIM_Message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CIMGetMsgByIdRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CIM_Message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CIM_Message_proto_goTypes,
		DependencyIndexes: file_CIM_Message_proto_depIdxs,
		MessageInfos:      file_CIM_Message_proto_msgTypes,
	}.Build()
	File_CIM_Message_proto = out.File
	file_CIM_Message_proto_rawDesc = nil
	file_CIM_Message_proto_goTypes = nil
	file_CIM_Message_proto_depIdxs = nil
}

// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "created", Type: field.TypeTime},
		{Name: "updated", Type: field.TypeTime},
		{Name: "session_key", Type: field.TypeString, Size: 32},
		{Name: "from", Type: field.TypeInt64},
		{Name: "to", Type: field.TypeString, Size: 32},
		{Name: "session_type", Type: field.TypeInt8},
		{Name: "client_msg_id", Type: field.TypeString, Size: 32},
		{Name: "server_msg_seq", Type: field.TypeInt64},
		{Name: "msg_type", Type: field.TypeInt8},
		{Name: "msg_data", Type: field.TypeString, Size: 4096},
		{Name: "msg_res_code", Type: field.TypeInt8},
		{Name: "msg_feature", Type: field.TypeInt8},
		{Name: "msg_status", Type: field.TypeInt8},
		{Name: "create_time", Type: field.TypeInt64},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "created", Type: field.TypeTime},
		{Name: "updated", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeString, Size: 32},
		{Name: "peer_id", Type: field.TypeString, Size: 32},
		{Name: "session_type", Type: field.TypeInt8},
		{Name: "session_status", Type: field.TypeInt8},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MessagesTable,
		SessionsTable,
	}
)

func init() {
}

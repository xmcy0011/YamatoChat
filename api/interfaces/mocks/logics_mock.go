// Code generated by MockGen. DO NOT EDIT.
// Source: logics.go
//
// Generated by this command:
//
//	mockgen -source=logics.go -destination=./mocks/logics_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	interfaces "github.com/xmcy0011/CoffeeChat/api/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthLogic is a mock of AuthLogic interface.
type MockAuthLogic struct {
	ctrl     *gomock.Controller
	recorder *MockAuthLogicMockRecorder
}

// MockAuthLogicMockRecorder is the mock recorder for MockAuthLogic.
type MockAuthLogicMockRecorder struct {
	mock *MockAuthLogic
}

// NewMockAuthLogic creates a new mock instance.
func NewMockAuthLogic(ctrl *gomock.Controller) *MockAuthLogic {
	mock := &MockAuthLogic{ctrl: ctrl}
	mock.recorder = &MockAuthLogicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthLogic) EXPECT() *MockAuthLogicMockRecorder {
	return m.recorder
}

// MockUserLogic is a mock of UserLogic interface.
type MockUserLogic struct {
	ctrl     *gomock.Controller
	recorder *MockUserLogicMockRecorder
}

// MockUserLogicMockRecorder is the mock recorder for MockUserLogic.
type MockUserLogicMockRecorder struct {
	mock *MockUserLogic
}

// NewMockUserLogic creates a new mock instance.
func NewMockUserLogic(ctrl *gomock.Controller) *MockUserLogic {
	mock := &MockUserLogic{ctrl: ctrl}
	mock.recorder = &MockUserLogicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserLogic) EXPECT() *MockUserLogicMockRecorder {
	return m.recorder
}

// RegisterUser mocks base method.
func (m *MockUserLogic) RegisterUser(ctx context.Context, request interfaces.UserRegisterRequest) (*interfaces.UserRegisterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterUser", ctx, request)
	ret0, _ := ret[0].(*interfaces.UserRegisterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterUser indicates an expected call of RegisterUser.
func (mr *MockUserLogicMockRecorder) RegisterUser(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterUser", reflect.TypeOf((*MockUserLogic)(nil).RegisterUser), ctx, request)
}
